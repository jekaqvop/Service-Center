<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Helvetica"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15" BorderThickness="2" BorderBrush="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>        
    </Style>
    <Style x:Key="MinButton"  TargetType="{x:Type Polygon}">
        <Setter Property="Fill" Value="{DynamicResource WhiteBlackColor}"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Points" Value="0,11,13,11,13,7,0,7"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=MinButton}" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="OffOnButton" TargetType="{x:Type ToggleButton}">
        <Style.Resources>
            <Color x:Key="Color.Additional.White">White</Color>
            <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
            <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
            <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

            <Style x:Key="ToggleButtonContentTextbox"
               TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
            <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.White}" />
            <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
            <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
            <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
            <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
            <Style x:Key="OnContentControl"
               TargetType="ContentControl">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="OffContentControl"
               TargetType="ContentControl">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="Black" BorderThickness="1" CornerRadius="18">
                    <Grid x:Name="MainRow">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="TopRow" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                            <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                            <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                        </Grid>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="AnimationWidth" />
                                <ColumnDefinition Width="{Binding ElementName=MainRow,
                        Path=ActualHeight}" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="AnimationSizeBorder"
                                Grid.Column="0" />
                            <ContentControl Grid.Column="0"
                                        Style="{StaticResource OnContentControl}" />
                        </Grid>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ElementName=MainRow,
                Path=ActualHeight}" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <ContentControl Grid.Column="1"
                                        Style="{StaticResource OffContentControl}" />
                        </Grid>
                        <Grid Background="Transparent">
                            <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                <Border Width="{Binding ElementName=AnimationSizeBorder,
                Path=ActualWidth}" />
                                <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                            <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />                      
                            <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultButton" TargetType="Button" >
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Foreground}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Margin="0"
                        x:Name="Border" 
                        CornerRadius="0"
                        BorderThickness="0"
                        BorderBrush="Black"
                        Background="{DynamicResource Button.Background}">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Play_Pause" TargetType="Button" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding TableRapairVM.OnOffSendNotification}" Value="True">
                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Bell}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TableRapairVM.OnOffSendNotification}" Value="False">
                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=BellRing}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>